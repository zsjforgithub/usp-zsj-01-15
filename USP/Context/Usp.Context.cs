//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace USP.Context
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using USP.Models.Entity;
    
    public partial class USPEntities : DbContext
    {
        public USPEntities()
            : base("name=USPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<IdCardImg> IdCardImg { get; set; }
        public virtual DbSet<OpenPlatform> OpenPlatform { get; set; }
        public virtual DbSet<OpenPlatformAccessToken> OpenPlatformAccessToken { get; set; }
        public virtual DbSet<OpenPlatformDefaultMsg> OpenPlatformDefaultMsg { get; set; }
        public virtual DbSet<OpenPlatformMenu> OpenPlatformMenu { get; set; }
        public virtual DbSet<OpenPlatformMenuType> OpenPlatformMenuType { get; set; }
        public virtual DbSet<OpenPlatformMO> OpenPlatformMO { get; set; }
        public virtual DbSet<OpenPlatformMsg> OpenPlatformMsg { get; set; }
        public virtual DbSet<OpenPlatformMsgChildren> OpenPlatformMsgChildren { get; set; }
        public virtual DbSet<OpenPlatformMsgKey> OpenPlatformMsgKey { get; set; }
        public virtual DbSet<OpenPlatformMsgType> OpenPlatformMsgType { get; set; }
        public virtual DbSet<OpenPlatformMT> OpenPlatformMT { get; set; }
        public virtual DbSet<OpenPlatformSubscriber> OpenPlatformSubscriber { get; set; }
        public virtual DbSet<OpenPlatformUserInfo> OpenPlatformUserInfo { get; set; }
        public virtual DbSet<SysArea> SysArea { get; set; }
        public virtual DbSet<SysCorp> SysCorp { get; set; }
        public virtual DbSet<SysCorpFeeType> SysCorpFeeType { get; set; }
        public virtual DbSet<SysCorpGrade> SysCorpGrade { get; set; }
        public virtual DbSet<SysCorpStatus> SysCorpStatus { get; set; }
        public virtual DbSet<SysCorpType> SysCorpType { get; set; }
        public virtual DbSet<SysCorpVocation> SysCorpVocation { get; set; }
        public virtual DbSet<SysLoginLog> SysLoginLog { get; set; }
        public virtual DbSet<SysMenu> SysMenu { get; set; }
        public virtual DbSet<SysMenuTemplate> SysMenuTemplate { get; set; }
        public virtual DbSet<SysOperator> SysOperator { get; set; }
        public virtual DbSet<SysOperatorGrade> SysOperatorGrade { get; set; }
        public virtual DbSet<SysOperatorStar> SysOperatorStar { get; set; }
        public virtual DbSet<SysOperatorStatus> SysOperatorStatus { get; set; }
        public virtual DbSet<SysPrivilege> SysPrivilege { get; set; }
        public virtual DbSet<SysPrivilegeTemplate> SysPrivilegeTemplate { get; set; }
        public virtual DbSet<SysRole> SysRole { get; set; }
        public virtual DbSet<SysRoleMenu> SysRoleMenu { get; set; }
        public virtual DbSet<SysRoleOperator> SysRoleOperator { get; set; }
        public virtual DbSet<SysRolePrivilege> SysRolePrivilege { get; set; }
        public virtual DbSet<SysSkin> SysSkin { get; set; }
        public virtual DbSet<OpenPlatformType> OpenPlatformType { get; set; }
    
        public virtual int UP_AddMenu(string name, string icon)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var iconParameter = icon != null ?
                new ObjectParameter("Icon", icon) :
                new ObjectParameter("Icon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_AddMenu", nameParameter, iconParameter);
        }
    
        public virtual int UP_AddMenuItem(string parent, string name, string icon, string @class, string area, string controller, string action, string parameter, string url)
        {
            var parentParameter = parent != null ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var iconParameter = icon != null ?
                new ObjectParameter("Icon", icon) :
                new ObjectParameter("Icon", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var controllerParameter = controller != null ?
                new ObjectParameter("Controller", controller) :
                new ObjectParameter("Controller", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var parameterParameter = parameter != null ?
                new ObjectParameter("Parameter", parameter) :
                new ObjectParameter("Parameter", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_AddMenuItem", parentParameter, nameParameter, iconParameter, classParameter, areaParameter, controllerParameter, actionParameter, parameterParameter, urlParameter);
        }
    
        public virtual ObjectResult<string> UP_CheckSSO(Nullable<long> @operator, string session)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            var sessionParameter = session != null ?
                new ObjectParameter("Session", session) :
                new ObjectParameter("Session", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_CheckSSO", operatorParameter, sessionParameter);
        }
    
        public virtual ObjectResult<SysMenu> UP_GetOperatorMenu(Nullable<long> @operator)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysMenu>("UP_GetOperatorMenu", operatorParameter);
        }
    
        public virtual ObjectResult<SysMenu> UP_GetOperatorMenu(Nullable<long> @operator, MergeOption mergeOption)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysMenu>("UP_GetOperatorMenu", mergeOption, operatorParameter);
        }
    
        public virtual ObjectResult<SysPrivilege> UP_GetOperatorPrivilege(Nullable<long> @operator)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysPrivilege>("UP_GetOperatorPrivilege", operatorParameter);
        }
    
        public virtual ObjectResult<SysPrivilege> UP_GetOperatorPrivilege(Nullable<long> @operator, MergeOption mergeOption)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysPrivilege>("UP_GetOperatorPrivilege", mergeOption, operatorParameter);
        }
    
        public virtual ObjectResult<SysOperator> UP_Login(string loginName, string password, string session, string iP)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sessionParameter = session != null ?
                new ObjectParameter("Session", session) :
                new ObjectParameter("Session", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysOperator>("UP_Login", loginNameParameter, passwordParameter, sessionParameter, iPParameter);
        }
    
        public virtual ObjectResult<SysOperator> UP_Login(string loginName, string password, string session, string iP, MergeOption mergeOption)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sessionParameter = session != null ?
                new ObjectParameter("Session", session) :
                new ObjectParameter("Session", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysOperator>("UP_Login", mergeOption, loginNameParameter, passwordParameter, sessionParameter, iPParameter);
        }
    
        public virtual ObjectResult<UP_ShowArea_Result> UP_ShowArea(Nullable<int> pageIndex, Nullable<int> pageSize, string strOrder, string strOrderType)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var strOrderParameter = strOrder != null ?
                new ObjectParameter("strOrder", strOrder) :
                new ObjectParameter("strOrder", typeof(string));
    
            var strOrderTypeParameter = strOrderType != null ?
                new ObjectParameter("strOrderType", strOrderType) :
                new ObjectParameter("strOrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_ShowArea_Result>("UP_ShowArea", pageIndexParameter, pageSizeParameter, strOrderParameter, strOrderTypeParameter);
        }
    
        public virtual int UP_ShowPage(string strGetFields, string tblName, string strWhere, string strOrder, string strOrderType, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<long> rowCnt)
        {
            var strGetFieldsParameter = strGetFields != null ?
                new ObjectParameter("strGetFields", strGetFields) :
                new ObjectParameter("strGetFields", typeof(string));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var strWhereParameter = strWhere != null ?
                new ObjectParameter("strWhere", strWhere) :
                new ObjectParameter("strWhere", typeof(string));
    
            var strOrderParameter = strOrder != null ?
                new ObjectParameter("strOrder", strOrder) :
                new ObjectParameter("strOrder", typeof(string));
    
            var strOrderTypeParameter = strOrderType != null ?
                new ObjectParameter("strOrderType", strOrderType) :
                new ObjectParameter("strOrderType", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var rowCntParameter = rowCnt.HasValue ?
                new ObjectParameter("RowCnt", rowCnt) :
                new ObjectParameter("RowCnt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_ShowPage", strGetFieldsParameter, tblNameParameter, strWhereParameter, strOrderParameter, strOrderTypeParameter, pageIndexParameter, pageSizeParameter, rowCntParameter);
        }
    
        public virtual int UP_AddPrivilege(string menu, string parent, string name, string @class, string area, string controller, string action, string parameter, string url)
        {
            var menuParameter = menu != null ?
                new ObjectParameter("Menu", menu) :
                new ObjectParameter("Menu", typeof(string));
    
            var parentParameter = parent != null ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var controllerParameter = controller != null ?
                new ObjectParameter("Controller", controller) :
                new ObjectParameter("Controller", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var parameterParameter = parameter != null ?
                new ObjectParameter("Parameter", parameter) :
                new ObjectParameter("Parameter", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_AddPrivilege", menuParameter, parentParameter, nameParameter, classParameter, areaParameter, controllerParameter, actionParameter, parameterParameter, urlParameter);
        }
    
        public virtual ObjectResult<SysMenu> UP_GetRoleMenu(Nullable<long> role)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysMenu>("UP_GetRoleMenu", roleParameter);
        }
    
        public virtual ObjectResult<SysMenu> UP_GetRoleMenu(Nullable<long> role, MergeOption mergeOption)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysMenu>("UP_GetRoleMenu", mergeOption, roleParameter);
        }
    
        public virtual ObjectResult<SysPrivilege> UP_GetRolePrivilege(Nullable<long> role)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysPrivilege>("UP_GetRolePrivilege", roleParameter);
        }
    
        public virtual ObjectResult<SysPrivilege> UP_GetRolePrivilege(Nullable<long> role, MergeOption mergeOption)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysPrivilege>("UP_GetRolePrivilege", mergeOption, roleParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_AddRole(Nullable<long> corp, string name, Nullable<bool> type, string remark, Nullable<long> creator, string menus, string privileges)
        {
            var corpParameter = corp.HasValue ?
                new ObjectParameter("Corp", corp) :
                new ObjectParameter("Corp", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(bool));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(long));
    
            var menusParameter = menus != null ?
                new ObjectParameter("Menus", menus) :
                new ObjectParameter("Menus", typeof(string));
    
            var privilegesParameter = privileges != null ?
                new ObjectParameter("Privileges", privileges) :
                new ObjectParameter("Privileges", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_AddRole", corpParameter, nameParameter, typeParameter, remarkParameter, creatorParameter, menusParameter, privilegesParameter);
        }
    
        public virtual ObjectResult<SysRole> UP_GetRoleByOperator(Nullable<long> @operator)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysRole>("UP_GetRoleByOperator", operatorParameter);
        }
    
        public virtual ObjectResult<SysRole> UP_GetRoleByOperator(Nullable<long> @operator, MergeOption mergeOption)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysRole>("UP_GetRoleByOperator", mergeOption, operatorParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_EditRole(Nullable<long> roleID, string name, string remark, Nullable<long> creator, string menus, string privileges)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(long));
    
            var menusParameter = menus != null ?
                new ObjectParameter("Menus", menus) :
                new ObjectParameter("Menus", typeof(string));
    
            var privilegesParameter = privileges != null ?
                new ObjectParameter("Privileges", privileges) :
                new ObjectParameter("Privileges", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_EditRole", roleIDParameter, nameParameter, remarkParameter, creatorParameter, menusParameter, privilegesParameter);
        }
    }
}
